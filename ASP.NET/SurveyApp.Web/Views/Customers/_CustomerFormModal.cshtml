
@model dynamic

<div class="modal fade" id="customerFormModal" tabindex="-1" aria-labelledby="customerFormModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content rounded-lg overflow-hidden shadow-xl border-0">
            <div class="modal-header bg-gradient-to-r from-primary/90 to-primary p-4 text-white border-b-0">
                <h5 class="modal-title text-xl font-semibold" id="customerFormModalTitle">Agregar Nuevo Cliente</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="AddCustomer" asp-controller="Customers" method="post" class="needs-validation" novalidate>
                <div class="modal-body p-5">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="CustomerForm_Id" name="CustomerForm.Id" value="@(Model.CustomerForm?.Id ?? 0)" />
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-5">
                        <div class="md:col-span-2">
                            <div class="mb-4">
                                <label for="CustomerForm_BrandName" class="block text-sm font-medium text-gray-700 mb-1">Nombre de la Marca <span class="text-red-500">*</span></label>
                                <input type="text" id="CustomerForm_BrandName" name="CustomerForm.BrandName" value="@(Model.CustomerForm?.BrandName)" required
                                       class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-primary/50 focus:border-primary transition-colors" />
                                <div class="invalid-feedback text-red-500 text-sm mt-1">Por favor, ingrese el nombre de la marca.</div>
                            </div>
                        </div>
                        
                        <div>
                            <div class="mb-4">
                                <label for="CustomerForm_ContactName" class="block text-sm font-medium text-gray-700 mb-1">Nombre de Contacto <span class="text-red-500">*</span></label>
                                <input type="text" id="CustomerForm_ContactName" name="CustomerForm.ContactName" value="@(Model.CustomerForm?.ContactName)" required
                                       class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-primary/50 focus:border-primary transition-colors" />
                                <div class="invalid-feedback text-red-500 text-sm mt-1">Por favor, ingrese el nombre de contacto.</div>
                            </div>
                        </div>
                        
                        <div>
                            <div class="mb-4">
                                <label for="CustomerForm_ContactEmail" class="block text-sm font-medium text-gray-700 mb-1">Correo Electrónico <span class="text-red-500">*</span></label>
                                <input type="email" id="CustomerForm_ContactEmail" name="CustomerForm.ContactEmail" value="@(Model.CustomerForm?.ContactEmail)" required
                                       class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-primary/50 focus:border-primary transition-colors" />
                                <div class="invalid-feedback text-red-500 text-sm mt-1">Por favor, ingrese un correo electrónico válido.</div>
                            </div>
                        </div>
                        
                        <div>
                            <div class="mb-4">
                                <label for="CustomerForm_ContactPhone" class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label>
                                <input type="tel" id="CustomerForm_ContactPhone" name="CustomerForm.ContactPhone" value="@(Model.CustomerForm?.ContactPhone)"
                                       class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-primary/50 focus:border-primary transition-colors" />
                            </div>
                        </div>
                        
                        <div>
                            <div class="mb-4">
                                <label for="CustomerForm_CustomerType" class="block text-sm font-medium text-gray-700 mb-1">Tipo de Cliente</label>
                                <select id="CustomerForm_CustomerType" name="CustomerForm.CustomerType" 
                                        class="w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-primary/50 focus:border-primary transition-colors">
                                    <option value="client" selected="@(Model.CustomerForm?.CustomerType == "client")">Cliente</option>
                                    <option value="admin" selected="@(Model.CustomerForm?.CustomerType == "admin")">Administrador</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="md:col-span-2">
                            <div class="mb-4">
                                <label class="block text-sm font-medium text-gray-700 mb-2">Servicios Adquiridos</label>
                                <div class="grid grid-cols-2 sm:grid-cols-3 gap-3">
                                    @if (Model.Services != null)
                                    {
                                        @foreach (var service in Model.Services)
                                        {
                                            bool isChecked = Model.CustomerForm?.AcquiredServices != null && Model.CustomerForm.AcquiredServices.Contains(service.Name);
                                            <div class="flex items-center">
                                                <input type="checkbox" id="service_@service.Id" name="CustomerForm.AcquiredServices" value="@service.Name" checked="@isChecked"
                                                       class="w-4 h-4 text-primary border-gray-300 rounded focus:ring-primary" />
                                                <label for="service_@service.Id" class="ml-2 text-sm text-gray-700">@service.Name</label>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer bg-gray-50 p-4 flex justify-end gap-2">
                    <button type="button" class="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-100 focus:outline-none transition-colors" data-bs-dismiss="modal">
                        Cancelar
                    </button>
                    <button type="submit" id="customerFormSubmitButton" class="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/80 focus:outline-none transition-colors">
                        Guardar Cliente
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Validación de formulario personalizada
        const forms = document.querySelectorAll('.needs-validation');
        
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                
                form.classList.add('was-validated');
            }, false);
        });
        
        // Reiniciar formulario al cerrar el modal
        const customerFormModal = document.getElementById('customerFormModal');
        customerFormModal.addEventListener('hidden.bs.modal', function () {
            const form = customerFormModal.querySelector('form');
            form.reset();
            form.classList.remove('was-validated');
            
            // Resetear campos ocultos e ID
            document.getElementById('CustomerForm_Id').value = '0';
            
            // Cambiar título del modal y texto del botón
            document.getElementById('customerFormModalTitle').textContent = 'Agregar Nuevo Cliente';
            document.getElementById('customerFormSubmitButton').textContent = 'Guardar Cliente';
        });
        
        // Animación de apertura del modal
        customerFormModal.addEventListener('shown.bs.modal', function () {
            const modalDialog = customerFormModal.querySelector('.modal-dialog');
            modalDialog.style.opacity = '0';
            modalDialog.style.transform = 'translateY(-20px)';
            
            setTimeout(() => {
                modalDialog.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                modalDialog.style.opacity = '1';
                modalDialog.style.transform = 'translateY(0)';
            }, 50);
        });
    });
</script>
